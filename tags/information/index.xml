<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Information on Jae Logan</title>
    <link>https://jrliv.com/tags/information/</link>
    <description>Recent content in Information on Jae Logan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license.</copyright>
    <lastBuildDate>Sat, 26 Mar 2022 10:46:19 -0400</lastBuildDate>
    
	<atom:link href="https://jrliv.com/tags/information/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Value and Reference Types in C#</title>
      <link>https://jrliv.com/post/value-and-reference-types-in-csharp/</link>
      <pubDate>Sat, 26 Mar 2022 10:46:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/value-and-reference-types-in-csharp/</guid>
      <description>The two main categories of types in C# that most objects and variables are categorized under, are value types and reference types. The main differences between these types are the values and how they are stored in memory. A value type variable directly contains a value that is stored on the stack, whereas a reference type variable contains a reference to a value or object that is stored on the heap.</description>
    </item>
    
    <item>
      <title>.NET Framework Code Execution Process</title>
      <link>https://jrliv.com/post/dotnet-code-execution-process/</link>
      <pubDate>Thu, 24 Feb 2022 10:46:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/dotnet-code-execution-process/</guid>
      <description>In a previous post I wrote about Managed Code vs Unmanaged Code, and that got me thinking&amp;hellip; when you write, compile, and run an application, there&amp;rsquo;s a lot of things going on under the hood. I think it&amp;rsquo;s important to have an idea of the process so you can better understand how your applications work. Since I mostly work in the .NET world myself, I&amp;rsquo;m going to briefly explain the typical process that occurs when managed .</description>
    </item>
    
    <item>
      <title>Managed Code vs Unmanaged Code</title>
      <link>https://jrliv.com/post/managed-code-vs-unmanaged-code/</link>
      <pubDate>Sun, 31 Jan 2021 10:46:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/managed-code-vs-unmanaged-code/</guid>
      <description>As a .NET developer, you may hear or see the terms &amp;ldquo;managed code&amp;rdquo; and &amp;ldquo;unmanaged code&amp;rdquo; from time to time. You may even be asked about them in job interviews. They are terms that can often be overlooked by new .NET developers that are just starting to learn. I think it&amp;rsquo;s important to at least have a high-level idea of the two terms so I whipped up this blog post to try and illustrate.</description>
    </item>
    
  </channel>
</rss>