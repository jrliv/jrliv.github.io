<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jae Logan</title>
    <link>https://jrliv.com/post/</link>
    <description>Recent content in Posts on Jae Logan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license.</copyright>
    <lastBuildDate>Sun, 06 Dec 2020 14:46:19 -0400</lastBuildDate>
    
	<atom:link href="https://jrliv.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visual Studio Missing Start Without Debugging Option</title>
      <link>https://jrliv.com/post/visual-studio-missing-start-without-debug/</link>
      <pubDate>Sun, 06 Dec 2020 14:46:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/visual-studio-missing-start-without-debug/</guid>
      <description>One issue I&amp;rsquo;ve experienced with Visual Studio a few times over the years is when the &amp;lsquo;Start Without Debugging&amp;rsquo; option under the Debug menu decides to disappear. I have no clue what causes this or what I&amp;rsquo;m doing to make the option hide from me. I can always still use Ctrl + F5 to run my project without debugging, but for some reason it bothers me when the option is missing so here are two ways to add it back.</description>
    </item>
    
    <item>
      <title>Differences Between Sites, Applications, and Virtual Directories in IIS</title>
      <link>https://jrliv.com/post/differences-between-site-app-virtual-dir-iis/</link>
      <pubDate>Wed, 25 Nov 2020 12:23:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/differences-between-site-app-virtual-dir-iis/</guid>
      <description>I&amp;rsquo;ve been using IIS 10 regularly over the last 2 years now and one thing that&amp;rsquo;s always confused me was the differences between sites, applications, and virtual directories and what they&amp;rsquo;re used for.
After doing some research on these components, I found that the easiest way to understand them from a high-level, is to think of them all as sort of a hierarchy of containers for each other. A site contains one or more applications, an application contains one or more virtual directories, and a virtual directory maps directly to a folder location on the disk.</description>
    </item>
    
    <item>
      <title>What I Learned from .NET Conf 2020</title>
      <link>https://jrliv.com/post/dotnet-conf-2020/</link>
      <pubDate>Wed, 18 Nov 2020 17:46:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/dotnet-conf-2020/</guid>
      <description>Source: .NET Conf 2020
Last week .NET Conf 2020 happened. Taking place November 10th-12th, the conference celebrated 10 years as a virtual event for developers. This year was the first time I was able to watch most of the sessions in a timely manner so I decided to highlight what I learned.
If you don&amp;rsquo;t know, .NET Conf is a free, 3-day virtual developer event, co-organized by Microsoft and the .</description>
    </item>
    
    <item>
      <title>How to Redirect to Another URL Path in IIS</title>
      <link>https://jrliv.com/post/redirect-to-another-url-in-iis/</link>
      <pubDate>Thu, 05 Nov 2020 20:28:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/redirect-to-another-url-in-iis/</guid>
      <description>In a few steps this post will show how to use HTTP Redirect in IIS to specify rules that can redirect requests to another file path or website.
Prerequisites  Windows operating system Internet Information Services (IIS)  Steps  Open IIS. In the left pane under &amp;lsquo;Sites&amp;rsquo;, select the Web site or application that you want to redirect from.
 Double click on &amp;lsquo;HTTP Redirect&amp;rsquo; in the main pane under the &amp;lsquo;IIS&amp;rsquo; section:</description>
    </item>
    
    <item>
      <title>What I&#39;ve Been Up To</title>
      <link>https://jrliv.com/post/what-ive-been-up-to/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jrliv.com/post/what-ive-been-up-to/</guid>
      <description>My goal with this website is to document and share everything that I learn related to programming and technology. If you look around, it&amp;rsquo;s obvious that I haven&amp;rsquo;t done much of that since I started this site in May of 2017. I haven&amp;rsquo;t posted or done a thing since January of last year. So in an effort to get things back swinging here, I decided to make a quick post about what I&amp;rsquo;ve been up to in my technical life for the last year and 4 months.</description>
    </item>
    
    <item>
      <title>Assignment Operators in C#</title>
      <link>https://jrliv.com/post/assignment-operators/</link>
      <pubDate>Tue, 16 Jan 2018 07:46:41 -0400</pubDate>
      
      <guid>https://jrliv.com/post/assignment-operators/</guid>
      <description>Assignment operators are used for assigning a value to a variable. In C# the assignment operator is the equal sign (=). It&amp;rsquo;s often used as a suffix in combination with an arithmetic operator to perform an operation on an existing variable (typically used as the left operand) and assign the result to itself. These operators are also known as compound assignment operators.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.</description>
    </item>
    
    <item>
      <title>Comparison Operators in C#</title>
      <link>https://jrliv.com/post/comparison-operators/</link>
      <pubDate>Fri, 12 Jan 2018 12:33:38 -0400</pubDate>
      
      <guid>https://jrliv.com/post/comparison-operators/</guid>
      <description>Comparison operators are used to compare two operands and return a Boolean result (true or false). They can be used to control the flow of a program by determining if the execution of a conditional statement or loop should stop or continue based on the result of the comparison.
Comparison operators are also known as relational operators, as they define the relation between two operands when used.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.</description>
    </item>
    
    <item>
      <title>Bitwise Operators in C#</title>
      <link>https://jrliv.com/post/bitwise-operators/</link>
      <pubDate>Fri, 20 Oct 2017 09:06:00 -0400</pubDate>
      
      <guid>https://jrliv.com/post/bitwise-operators/</guid>
      <description>Bitwise operators perform calculations on binary numbers. If you don&amp;rsquo;t know what binary numbers are, they are a series of ones and zeros that represent numerical data. For example, the number 20 is represented as 00010100 in binary. All data in computers are represented by the binary numeral system.
I plan on writing a post in the future about numeral systems but for now, if you want to learn more there are tons of other articles and resources all over the Internet that you can read and use to learn about the binary numeral system.</description>
    </item>
    
    <item>
      <title>Logical Operators in C#</title>
      <link>https://jrliv.com/post/logical-operators/</link>
      <pubDate>Fri, 06 Oct 2017 22:36:44 -0400</pubDate>
      
      <guid>https://jrliv.com/post/logical-operators/</guid>
      <description>Logical operators (also known as Boolean or conditional operators) usually compare two or more conditions and return a Boolean result (true or false). They must be used on boolean type operands or variables. They are widely used in C# programming and very useful when comparing more than one condition.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.</description>
    </item>
    
    <item>
      <title>Arithmetic Operators in C#</title>
      <link>https://jrliv.com/post/arithmetic-operators/</link>
      <pubDate>Mon, 25 Sep 2017 08:16:41 -0400</pubDate>
      
      <guid>https://jrliv.com/post/arithmetic-operators/</guid>
      <description>Arithmetic operators are the most common operators used in programming. They perform mathematical operations on numerical values and return a numerical result. They are the same signs and operations that are used in math and everyday life.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.
Here are the arithmetic operators used in C#:</description>
    </item>
    
    <item>
      <title>Working with Operators in C#</title>
      <link>https://jrliv.com/post/working-with-operators/</link>
      <pubDate>Wed, 20 Sep 2017 12:39:58 -0400</pubDate>
      
      <guid>https://jrliv.com/post/working-with-operators/</guid>
      <description>Working with operators is an important part of learning how to program. Every programming language uses operators. You will need to use them in essentially every program you write. Therefore every programmer will have to learn how to use them.
In this post I will write about operators in C# and show examples of how to work with some of them.
What is an operator? An operator is a special character that allows you to process and perform different mathematical or logical operations on data types and objects.</description>
    </item>
    
    <item>
      <title>What Programming Language Should I Learn First?</title>
      <link>https://jrliv.com/post/what-programming-language-should-i-learn-first/</link>
      <pubDate>Wed, 26 Jul 2017 10:48:35 -0400</pubDate>
      
      <guid>https://jrliv.com/post/what-programming-language-should-i-learn-first/</guid>
      <description>I just wanted to write a quick post about my opinion of which programming language new developers should learn first. This question is so common. If you are a new developer, you might be trying to figure this question out right now. For some, this question can turn into a hurdle that they&amp;rsquo;re never able to jump over. It can be a critical question.
Trust me when I say you aren&amp;rsquo;t alone.</description>
    </item>
    
    <item>
      <title>My First Pull Request</title>
      <link>https://jrliv.com/post/my-first-pull-request/</link>
      <pubDate>Thu, 29 Jun 2017 16:06:47 -0400</pubDate>
      
      <guid>https://jrliv.com/post/my-first-pull-request/</guid>
      <description>In this post I want to share my experience submitting my first pull request and contributing to open source. Honestly, my contribution wasn’t planned at all. It just kind of happened. I knew about open source software and how the idea worked but I didn&amp;rsquo;t know how to actually use git and attempt to submit a pull request to fix an issue on GitHub. The actual process itself turned out to be easier than I thought.</description>
    </item>
    
    <item>
      <title>Working with Variables in C#</title>
      <link>https://jrliv.com/post/working-with-variables/</link>
      <pubDate>Sun, 18 Jun 2017 22:26:28 -0400</pubDate>
      
      <guid>https://jrliv.com/post/working-with-variables/</guid>
      <description>One of the first things most new programmers learn how to do is work with variables. In this post I will discuss the different types of variables in C# and describe what they are, why they are used, and how to use them.
If you are already setup with Visual Studio or MonoDevelop on your computer, you can follow along with the post and run or modify the code snippets on your own.</description>
    </item>
    
    <item>
      <title>Get Started Using C# Without Visual Studio</title>
      <link>https://jrliv.com/post/get-started-using-csharp-without-visual-studio/</link>
      <pubDate>Sun, 28 May 2017 17:22:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/get-started-using-csharp-without-visual-studio/</guid>
      <description>This post will show you how to get started using the C# programming language without installing Visual Studio or any other IDE. C# is a great programming language to learn for anyone new to programming.
Regardless of the language, most fundamentals behind programming can be practiced and learned using only a text editor and the command line. Using the command line to compile and run code provides a faster way for new programmers to get going.</description>
    </item>
    
  </channel>
</rss>