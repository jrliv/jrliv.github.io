<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jae Logan</title>
    <link>https://jrliv.com/</link>
    <description>Recent content on Jae Logan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license.</copyright>
    <lastBuildDate>Thu, 05 Nov 2020 20:28:19 -0400</lastBuildDate>
    
	<atom:link href="https://jrliv.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redirect to Another URL Path in IIS</title>
      <link>https://jrliv.com/post/redirect-to-another-url-in-iis/</link>
      <pubDate>Thu, 05 Nov 2020 20:28:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/redirect-to-another-url-in-iis/</guid>
      <description>In a few steps this post will show how to use HTTP Redirect in IIS to specify rules that can redirect requests to another file path or website.
Prerequisites  Windows operating system Internet Information Services (IIS)  Steps  Open IIS. In the left pane under &amp;lsquo;Sites&amp;rsquo;, select the Web site or application that you want to redirect from.
 Double click on &amp;lsquo;HTTP Redirect&amp;rsquo; in the main pane under the &amp;lsquo;IIS&amp;rsquo; section:</description>
    </item>
    
    <item>
      <title>Assignment Operators in C#</title>
      <link>https://jrliv.com/post/assignment-operators/</link>
      <pubDate>Tue, 16 Jan 2018 07:46:41 -0400</pubDate>
      
      <guid>https://jrliv.com/post/assignment-operators/</guid>
      <description>Assignment operators are used for assigning a value to a variable. In C# the assignment operator is the equal sign (=). It&amp;rsquo;s often used as a suffix in combination with an arithmetic operator to perform an operation on an existing variable (typically used as the left operand) and assign the result to itself. These operators are also known as compound assignment operators.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.</description>
    </item>
    
    <item>
      <title>Comparison Operators in C#</title>
      <link>https://jrliv.com/post/comparison-operators/</link>
      <pubDate>Fri, 12 Jan 2018 12:33:38 -0400</pubDate>
      
      <guid>https://jrliv.com/post/comparison-operators/</guid>
      <description>Comparison operators are used to compare two operands and return a Boolean result (true or false). They can be used to control the flow of a program by determining if the execution of a conditional statement or loop should stop or continue based on the result of the comparison.
Comparison operators are also known as relational operators, as they define the relation between two operands when used.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.</description>
    </item>
    
    <item>
      <title>Bitwise Operators in C#</title>
      <link>https://jrliv.com/post/bitwise-operators/</link>
      <pubDate>Fri, 20 Oct 2017 09:06:00 -0400</pubDate>
      
      <guid>https://jrliv.com/post/bitwise-operators/</guid>
      <description>Bitwise operators perform calculations on binary numbers. If you don&amp;rsquo;t know what binary numbers are, they are a series of ones and zeros that represent numerical data. For example, the number 20 is represented as 00010100 in binary. All data in computers are represented by the binary numeral system.
I plan on writing a post in the future about numeral systems but for now, if you want to learn more there are tons of other articles and resources all over the Internet that you can read and use to learn about the binary numeral system.</description>
    </item>
    
    <item>
      <title>Logical Operators in C#</title>
      <link>https://jrliv.com/post/logical-operators/</link>
      <pubDate>Fri, 06 Oct 2017 22:36:44 -0400</pubDate>
      
      <guid>https://jrliv.com/post/logical-operators/</guid>
      <description>Logical operators (also known as Boolean or conditional operators) usually compare two or more conditions and return a Boolean result (true or false). They must be used on boolean type operands or variables. They are widely used in C# programming and very useful when comparing more than one condition.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.</description>
    </item>
    
    <item>
      <title>Arithmetic Operators in C#</title>
      <link>https://jrliv.com/post/arithmetic-operators/</link>
      <pubDate>Mon, 25 Sep 2017 08:16:41 -0400</pubDate>
      
      <guid>https://jrliv.com/post/arithmetic-operators/</guid>
      <description>Arithmetic operators are the most common operators used in programming. They perform mathematical operations on numerical values and return a numerical result. They are the same signs and operations that are used in math and everyday life.
If you aren&amp;rsquo;t generally familiar with operators and precedence in programming, then I suggest that you check out my blog post on Working with Operators in C#.
Here are the arithmetic operators used in C#:</description>
    </item>
    
    <item>
      <title>Working with Operators in C#</title>
      <link>https://jrliv.com/post/working-with-operators/</link>
      <pubDate>Wed, 20 Sep 2017 12:39:58 -0400</pubDate>
      
      <guid>https://jrliv.com/post/working-with-operators/</guid>
      <description>Working with operators is an important part of learning how to program. Every programming language uses operators. You will need to use them in essentially every program you write. Therefore every programmer will have to learn how to use them.
In this post I will write about operators in C# and show examples of how to work with some of them.
What is an operator? An operator is a special character that allows you to process and perform different mathematical or logical operations on data types and objects.</description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>https://jrliv.com/archive/</link>
      <pubDate>Mon, 07 Aug 2017 13:39:13 -0400</pubDate>
      
      <guid>https://jrliv.com/archive/</guid>
      <description>These are all of my blog posts organized by date from the most recent to the oldest. You can also use the tags page to filter posts by a specific tag.
2018  1/16/2018 - Assignment Operators in C# 1/12/2018 - Comparison Operators in C#  2017  10/20/2017 - Bitwise Operators in C# 10/6/2017 - Logical Operators in C# 9/25/2017 - Arithmetic Operators in C# 9/20/2017 - Working with Operators in C# 7/26/2017 - What Programming Language Should I Learn First?</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://jrliv.com/projects/</link>
      <pubDate>Mon, 07 Aug 2017 13:39:13 -0400</pubDate>
      
      <guid>https://jrliv.com/projects/</guid>
      <description>These are a few .NET projects that I&amp;rsquo;ve done. Some were done as side projects for fun and learning while others I&amp;rsquo;ve done for class assignments. If you want to see all of my projects and work check out my GitHub repositories.
Calculator A WPF desktop calculator created using C# .NET.
 Donation App A WPF desktop application created using C# .NET.
 Hourly Wage Calculator A WPF desktop application created using C# .</description>
    </item>
    
    <item>
      <title>What Programming Language Should I Learn First?</title>
      <link>https://jrliv.com/post/what-programming-language-should-i-learn-first/</link>
      <pubDate>Wed, 26 Jul 2017 10:48:35 -0400</pubDate>
      
      <guid>https://jrliv.com/post/what-programming-language-should-i-learn-first/</guid>
      <description>I just wanted to write a quick post about my opinion of which programming language new developers should learn first. This question is so common. If you are a new developer, you might be trying to figure this question out right now. For some, this question can turn into a hurdle that they&amp;rsquo;re never able to jump over. It can be a critical question.
Trust me when I say you aren&amp;rsquo;t alone.</description>
    </item>
    
    <item>
      <title>My First Pull Request</title>
      <link>https://jrliv.com/post/my-first-pull-request/</link>
      <pubDate>Thu, 29 Jun 2017 16:06:47 -0400</pubDate>
      
      <guid>https://jrliv.com/post/my-first-pull-request/</guid>
      <description>In this post I want to share my experience submitting my first pull request and contributing to open source. Honestly, my contribution wasnâ€™t planned at all. It just kind of happened. I knew about open source software and how the idea worked but I didn&amp;rsquo;t know how to actually use git and attempt to submit a pull request to fix an issue on GitHub. The actual process itself turned out to be easier than I thought.</description>
    </item>
    
    <item>
      <title>Working with Variables in C#</title>
      <link>https://jrliv.com/post/working-with-variables/</link>
      <pubDate>Sun, 18 Jun 2017 22:26:28 -0400</pubDate>
      
      <guid>https://jrliv.com/post/working-with-variables/</guid>
      <description>One of the first things most new programmers learn how to do is work with variables. In this post I will discuss the different types of variables in C# and describe what they are, why they are used, and how to use them.
If you are already setup with Visual Studio or MonoDevelop on your computer, you can follow along with the post and run or modify the code snippets on your own.</description>
    </item>
    
    <item>
      <title>Get Started Using C# Without Visual Studio</title>
      <link>https://jrliv.com/post/get-started-using-csharp-without-visual-studio/</link>
      <pubDate>Sun, 28 May 2017 17:22:19 -0400</pubDate>
      
      <guid>https://jrliv.com/post/get-started-using-csharp-without-visual-studio/</guid>
      <description>This post will show you how to get started using the C# programming language without installing Visual Studio or any other IDE. C# is a great programming language to learn for anyone new to programming.
Regardless of the language, most fundamentals behind programming can be practiced and learned using only a text editor and the command line. Using the command line to compile and run code provides a faster way for new programmers to get going.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jrliv.com/about/</link>
      <pubDate>Thu, 04 May 2017 13:39:13 -0400</pubDate>
      
      <guid>https://jrliv.com/about/</guid>
      <description>I&amp;rsquo;m Jae. I&amp;rsquo;m currently a full time .NET developer and a part time computer science student.
This site is where I blog everything that I learn related to computer science, programming, and technology so I can document things for myself and share with others.
I also use this site to share and post about my personal projects as well as any others that I&amp;rsquo;m working on or contributing to.
Most of my programming and development experience is with C# and the .</description>
    </item>
    
  </channel>
</rss>